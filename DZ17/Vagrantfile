home = ENV['HOME']

MACHINES = {
  :elk => {
        :box_name => "centos/7",
        :cpus => 2,
        :ip_addr => '192.168.11.150',
  },
  :rsyslog => {
        :box_name => "centos/7",
        :cpus => 2,
        :ip_addr => '192.168.11.151',
  },

  :web => {
        :box_name => "centos/7",
        :cpus => 2,
        :ip_addr => '192.168.11.152',
  }
}

Vagrant.configure("2") do |config|

  MACHINES.each do |boxname, boxconfig|

      config.vm.define boxname do |box|

          box.vm.box = boxconfig[:box_name]
          box.vm.host_name = boxname.to_s
          #box.vm.network "forwarded_port", guest: 3260, host: 3260+offset
          box.vm.network "private_network", ip: boxconfig[:ip_addr]

          box.vm.provider :virtualbox do |vb|
          vb.cpus = boxconfig[:cpus]
          vb.customize ["modifyvm", :id, "--memory", "1024"]
        #   vb.customize ["storagectl", :id, "--name", "SATA", "--add", "sata" ]
          vb.name = boxname.to_s

        #   boxconfig[:disks].each do |dname, dconf|
        #       unless File.exist?(dconf[:dfile])
        #         vb.customize ['createhd', '--filename', dconf[:dfile], '--variant', 'Fixed', '--size', dconf[:size]]
        #       end
        #       vb.customize ['storageattach', :id,  '--storagectl', 'SATA', '--port', dconf[:port], '--device', 0, '--type', 'hdd', '--medium', dconf[:dfile]]
        # end
          end
#      box.vm.provision "shell", inline: <<-SHELL
#          mkdir -p ~root/.ssh
#          cp ~vagrant/.ssh/auth* ~root/.ssh
#	yum install -y mc
#      SHELL

      case boxname.to_s
      when "elk"
        box.vm.provision "shell", inline: <<-SHELL
          setenforce 0
          sed -i "s/SELINUX=enforcing/SELINUX=disabled/g" /etc/selinux/config
          yum install epel-release -y
          yum install nano wget java-1.8.0 -y
          rpm --import https://artifacts.elastic.co/GPG-KEY-elasticsearch
          cp /vagrant/elasticsearch.repo /etc/yum.repos.d/elasticsearch.repo
          yum install elasticsearch -y
          systemctl daemon-reload
          systemctl enable --now elasticsearch
          cd
          wget --quiet https://artifacts.elastic.co/downloads/kibana/kibana-6.2.4-x86_64.rpm
          rpm -ivh kibana-6.2.4-x86_64.rpm
          cp -f /vagrant/kibana.yml /etc/kibana/kibana.yml
          systemctl enable --now kibana
          wget --quiet https://artifacts.elastic.co/downloads/logstash/logstash-6.2.4.rpm
          rpm -ivh logstash-6.2.4.rpm
          cp /vagrant/logstngx.conf /etc/logstash/conf.d/logstngx.conf
          systemctl enable --now logstash
         SHELL
      when "rsyslog"
        box.vm.provision "shell", inline: <<-SHELL
         echo "tcp_listen_port = 60" >> /etc/audit/auditd.conf
         cat /vagrant/rsyslog.conf > /etc/rsyslog.conf
         reboot
        SHELL
      when "web"
        box.vm.provision "shell", inline: <<-SHELL
         yum install -y epel-release
         yum install -y nano nginx wget
         cat /vagrant/rsyslog.client > /etc/rsyslog.conf
         systemctl restart rsyslog
         systemctl enable --now nginx
         wget --quiet https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-7.5.1-x86_64.rpm
         rpm -ivh filebeat-*
         cp -f /vagrant/filebeat.yml /etc/filebeat/filebeat.yml
         cp -f /vagrant/nginx.yml /etc/filebeat/modules.d/nginx.yml
         yum -y install audispd-plugins
         sed -i "s/active = no/active = yes/g" /etc/audisp/plugins.d/au-remote.conf
         sed -i "s/remote_server =/remote_server = 192.168.11.151/g" /etc/audisp/audisp-remote.conf
         sed -i "s/write_logs = yes/write_logs = no/g" /etc/audit/auditd.conf
         cp -f /vagrant/nginx.rules /etc/audit/rules.d/
         systemctl enable --now filebeat.service
         curl 127.0.0.1
         find /var/log -type f -delete
         reboot
        SHELL

      end

      end
   end
end
